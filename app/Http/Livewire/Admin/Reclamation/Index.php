<?php

namespace App\Http\Livewire\Admin\Reclamation;

use App\Http\Livewire\Admin\TableBase;
use App\Services\ExportService;
use App\Services\Resources\ReclamationService;
use Illuminate\Pagination\LengthAwarePaginator;
use Illuminate\Support\Collection;
use Symfony\Component\HttpFoundation\StreamedResponse;

class Index extends TableBase
{
    /* Reclamation specific filter criteria */
    public string $status = 'all';
    public string $type = 'all';
    public int|string $user_id = 0;

    public function render(ReclamationService $reclamationService)
    {
        $reclamations = $this->getReclamationsList($reclamationService);

        if($this->global_sort == 'false')
        {
            $this->sortDisplayedPaginatorCollection($reclamations);
        }

        return view('livewire.admin.reclamation.index', [
            'reclamations' => $reclamations,
        ]);
    }


    public function mount()
    {
        $this->sort_by = 'created_at';
        $this->sort_direction = 'DESC';
    }
    /**
     * Returns a paginated, filtered list of screenings or a searched through list of screenings if $this->search_query is set
     */
    public function getReclamationsList(ReclamationService $reclamationService): LengthAwarePaginator|Collection
    {
        return $reclamationService->getFilteredReclamationsPaginated(
            status: $this->status,
            type: $this->type,
            user_id: $this->user_id == '' ? 0 : $this->user_id,
            search_query: $this->search_query,
            do_sort: $this->global_sort == 'true',
            sort_by: $this->sort_by,
            sort_direction: $this->sort_direction,
            quantity: $this->quantity,
        );
    }

    /**
     * Exports the advert list to a CSV file
     * Returns a StreamedResponse with the CSV file
     * The CSV file is generated by the ExportService
     */
    public function export(ExportService $exportService, ReclamationService $reclamationService, string $scope = 'displayed'): StreamedResponse
    {
        $data = ($scope == 'displayed')
            ? $this->getReclamationsList($reclamationService)->values()->toArray()
            : $reclamationService->getFilteredReclamationsPaginated(user_id: 0, quantity: 0)->toArray();

        $csv = $exportService->generateCSV($data, $reclamationService);

        return response()->streamDownload(function () use ($csv) {
            echo $csv;
        }, 'reklamacije' . now()->format('-d:m:Y') . '.csv');
    }


}
